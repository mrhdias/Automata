"use strict";export default class Automata{constructor(t={attribute:"data-tasks",json_file:"tasks.json",start_element:"body"}){this.triggers=new Set(["click","init","mouseenter","mouseover","mouseup","mouseleave","scroll","scrollend","submit"]);this.methods=new Set(["get","post","put","patch","delete"]);this.dataAttribute=t["attribute"];this.jsonFile=t["json_file"];this.startElement=t["start_element"];this.tasks={}}fetchOptions(t,e){let r={method:t.method,cache:"no-cache"};if(t.method==="put"){r["headers"]={"Content-Type":"application/json"};r["body"]=JSON.stringify(e);return r}return r}async makeRequest(e,r={}){console.log("Body Data:",r,e.action);try{const o=await fetch(e.action,this.fetchOptions(e,r));if(!o.ok){throw new Error(`HTTP error! status: ${o.status} ${o.statusText}`)}let t={transformation:{},data:undefined};if(o.headers.has("Automata-Transformation")){console.log("Automata-Transformation:",o.headers.get("Automata-Transformation"));const a=o.headers.get("Automata-Transformation");if(a!==""){t.transformation=this.attrsStr2Obj(a)}}if(o.headers.has("Content-Type")){if(o.headers.get("Content-Type")==="application/json"){const n=await o.json();t.data=n;return t}}const s=await o.text();t.data=s;return t}catch(t){console.error(t)}}attrsStr2Obj(t){if(t===""){return{}}const e=t.replace(/[\r\n] */gm,"").replace(/\;$/,"").split(/\; */);let r={};for(const o of e){const s=o.split(/\: */);if(s.length!=2){throw new Error(`Wrong data atribute: ${o}`)}r[s[0]]=s[1]}return r}async getDefinedTasks(){const t=await fetch(this.jsonFile,{cache:"no-cache"});this.tasks=await t.json()}swapContent(t,e,r="inner"){if(r==="inner"){e.replaceChildren(...t.childNodes);return}if(r==="outer"){e.replaceWith(...t.childNodes);return}if(r==="before"){e.before(...t.childNodes)}if(r==="after"){e.after(...t.childNodes);return}if(r==="prepend"){e.prepend(...t.childNodes);return}if(r==="append"){e.append(...t.childNodes);return}if(r==="delete"){console.log("unimplemented");return}if(r==="none"){console.log("unimplemented");return}throw new Error(`swap "${r}" attribute not supported`)}addKeyValue(t,e,r,o=false){if(t.hasOwnProperty(e)){if(Array.isArray(t[e])){t[e].push(r)}else{const s=t[e];t[e]=[];t[e].push(s,r)}}else{if(o){t[e]=[];t[e].push(r)}else{t[e]=r}}}collectBodyData(t,e,r=""){if(t.hasChildNodes()){if(t.hasAttribute("name")){if(t.hasAttribute("name")&&!t.hasAttribute("value")){e[t.name]=[];r=t.name}}for(const o of t.childNodes){if(o.nodeType!==Node.TEXT_NODE){this.collectBodyData(o,e,r)}}}if(t.nodeType!==Node.TEXT_NODE){if(t.hasAttribute("value")){if(t.hasAttribute("name")){if(t.hasAttribute("type")&&t.type.toLowerCase()==="radio"){if(t.checked){this.addKeyValue(e,t.name,t.value)}}else if(t.type.toLowerCase()==="checkbox"){if(t.checked){this.addKeyValue(e,t.name,t.value,true)}}else{this.addKeyValue(e,t.name,t.value)}}else{if(t.nodeName==="OPTION"&&t.selected){const s=t.closest("select");if(s.hasChildNodes()){this.addKeyValue(e,s.name,t.value,true)}}}}}}findTasksRecursively(t){for(const e of t.childNodes){if(e.nodeType===Node.TEXT_NODE||e.nodeType===Node.COMMENT_NODE){continue}if(e.hasChildNodes()){this.findTasksRecursively(e)}if(e.hasAttribute(this.dataAttribute)&&e.getAttribute(this.dataAttribute)!==""){this.setTask(e)}}}minifyJavaScript(t){return t.replace(/\/\/.*|\/\*[\s\S]*?\*\//g,"").replace(/\s+/g," ").trim()}reScript(t){for(const e of t.childNodes){if(e.hasChildNodes()){this.reScript(e)}if(e.nodeName==="SCRIPT"){const r=document.createElement("script");r.type="text/javascript";r.textContent=this.minifyJavaScript(e.textContent);e.replaceWith(r)}}}buildFragment(data,source){const helper=document.createElement("div");helper.innerHTML=eval("`"+source+"`");this.reScript(helper);return helper}async fetchTemplate(t){try{const e=await fetch("./templates/".concat(t,".html"));if(!e.ok){throw new Error(`HTTP error! status: ${e.status} ${e.statusText}`)}return e.text()}catch(t){console.error(t)}return undefined}setTransformation(t,e){if(!e.hasOwnProperty("target")){e["target"]=t.hasOwnProperty("target")?t["target"]:"this"}if(!e.hasOwnProperty("template")){if(t.hasOwnProperty("template")){e["template"]=t["template"]}}if(!e.hasOwnProperty("swap")){e["swap"]=t.hasOwnProperty("swap")?t["swap"]:"inner"}if(!e.hasOwnProperty("remove")){if(t.hasOwnProperty("remove")){e["remove"]=t["remove"]}}}async processEvent(t,e){let r={};if(e.trigger==="submit"){const a=t.closest("form");if(a!==null&&a.hasChildNodes()){const n=a.querySelectorAll("input[name],select[name]");for(const i of n){this.collectBodyData(i,r)}}}else if(e.hasOwnProperty("collect-data")){const c=document.querySelectorAll(e["collect-data"]);for(const l of c){this.collectBodyData(l,r)}if(["post","put"].includes(e["method"])&&Object.keys(r).length===0){return}if(t.name!==""){r[t.name]=t.value}}if(e.hasOwnProperty("method")){e.method=e.method.toLowerCase();if(!this.methods.has(e.method)){throw new Error(`Unknown HTTP method: ${e.method}`)}}else{e["method"]="get"}const o=await this.makeRequest(e,r);if(o===undefined){return}this.setTransformation(e,o.transformation);const s=o.transformation.target==="this"?t:document.querySelector(o.transformation.target);if(s===null){throw new Error(`Template "${o.transformation.target}" not exist!`)}if(typeof o.data==="object"){if(o.transformation.hasOwnProperty("template")){if(o.transformation.template.length<3){throw new Error(`Short template name "${o.transformation.template}"`)}const h=await async function(t){switch(Array.from(o.transformation.template)[0]){case"@":return await t.fetchTemplate(o.transformation.template.substring(1));case"#":const e=document.getElementById(o.transformation.template.substring(1));if(e===null){throw new Error(`Template "${o.transformation.template}" not exist!`)}if(e.content.hasChildNodes()&&e.content.nodeType===Node.DOCUMENT_FRAGMENT_NODE&&e.content.children[0].nodeName==="TEXTAREA"&&e.content.children[0].hasAttribute("data-codeblock")){return e.content.children[0].value}throw new Error(`Invalid "${o.transformation.template}" embedded template`);default:throw new Error(`Invalid "${o.transformation.template}" fetched template`)}}(this);const d=this.buildFragment(o.data,h);if(d!==null){if(o.transformation.hasOwnProperty("remove")&&o.transformation.remove!==""){const f=s.querySelectorAll(o.transformation.remove);for(const m of f){m.remove()}}this.findTasksRecursively(d);this.swapContent(d,s,o.transformation.swap)}}}else if(typeof o.data==="string"&&o.data!==""){const d=function(t){const e=document.createElement("div");e.innerHTML=o.data;t.reScript(e);return e}(this);if(o.transformation.hasOwnProperty("remove")&&o.transformation.remove!==""){const f=s.querySelectorAll(o.transformation.remove);for(const m of f){m.remove()}}this.findTasksRecursively(d);this.swapContent(d,s,o.transformation.swap)}else{throw new Error("There is no data or text for the transformation")}}async setTask(t){const e=t.dataset.tasks.split(/ +/);for(const r of e){if(!this.tasks.hasOwnProperty(r)){throw new Error(`The task "${r}" not exist in tasks file!`)}console.log("Task:",r);const o=this.tasks[r];for(const a of["action","method","trigger"]){const n="attribute-".concat(a);if(o.hasOwnProperty(n)&&t.hasAttribute(o[n])&&t.getAttribute(o[n])!==""){o[a]=t.getAttribute(o[n])}}if(!(o.hasOwnProperty("trigger")&&this.triggers.has(o.trigger))&&(t.nodeName==="BUTTON"||t.nodeName==="INPUT"&&t.type==="button")){o.trigger="click"}if(o.trigger==="init"){this.processEvent(t,o);continue}const s=function(){if(o.trigger==="scroll"||o.trigger==="scrollend"){return document}return t}();s.addEventListener(o.trigger,t=>{t.preventDefault();this.processEvent(t.target,o)})}}search4Tasks(t){const e=t.querySelectorAll("["+this.dataAttribute+"]");if(e.length>0){for(const r of e){if(r.dataset.tasks!==""){this.setTask(r)}}}}init(){const t=document.getElementsByTagName(this.startElement);const e={childList:true,subtree:true};const r=(t,o)=>{t.forEach(t=>{if(t.type==="childList"){for(const e of t.addedNodes){console.log("Added Nodes...")}for(const r of t.removedNodes){console.log("Removed Nodes...")}if(t.target.childNodes.length===0){o.disconnect()}}})};const o=new MutationObserver(r);o.observe(t[0],e);this.getDefinedTasks().then(()=>{this.search4Tasks(t[0])})}}export{Automata};